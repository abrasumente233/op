{
    "square": [
        Pass {
            name: "AlwaysInlinerPass on [module]",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "CoroConditionalWrapper on [module]",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "AnnotationRemarksPass on square",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Pre-ISel Intrinsic Lowering (pre-isel-intrinsic-lowering)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand large div/rem (expand-large-div-rem)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand large fp convert (expand-large-fp-convert)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand Atomic instructions (atomic-expand)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Lower Garbage Collection Instructions (gc-lowering)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Shadow Stack GC Lowering (shadow-stack-gc-lowering)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Lower constant intrinsics (lower-constant-intrinsics)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Lower @llvm.global_dtors via `__cxa_atexit` (lower-global-dtors)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Remove unreachable blocks from the CFG (unreachableblockelim)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand vector predication intrinsics (expandvp)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Scalarize Masked Memory Intrinsics (scalarize-masked-mem-intrin)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand reduction intrinsics (expand-reductions)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "AArch64 Globals Tagging (aarch64-globals-tagging)",
            machine: false,
            after: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define i32 @square(i32 noundef %0)",
                },
                ResultLine {
                    text: "  %2 = alloca i32, align 4",
                },
                ResultLine {
                    text: "  store i32 %0, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %3 = call float @a()",
                },
                ResultLine {
                    text: "  %4 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %5 = load i32, ptr %2, align 4",
                },
                ResultLine {
                    text: "  %6 = mul nsw i32 %4, %5",
                },
                ResultLine {
                    text: "  ret i32 %6",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
    ],
    "a": [
        Pass {
            name: "AlwaysInlinerPass on [module]",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "CoroConditionalWrapper on [module]",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "AnnotationRemarksPass on a",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Pre-ISel Intrinsic Lowering (pre-isel-intrinsic-lowering)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand large div/rem (expand-large-div-rem)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand large fp convert (expand-large-fp-convert)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand Atomic instructions (atomic-expand)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Lower Garbage Collection Instructions (gc-lowering)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Shadow Stack GC Lowering (shadow-stack-gc-lowering)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Lower constant intrinsics (lower-constant-intrinsics)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Lower @llvm.global_dtors via `__cxa_atexit` (lower-global-dtors)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Remove unreachable blocks from the CFG (unreachableblockelim)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand vector predication intrinsics (expandvp)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Scalarize Masked Memory Intrinsics (scalarize-masked-mem-intrin)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Expand reduction intrinsics (expand-reductions)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "AArch64 Globals Tagging (aarch64-globals-tagging)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "AArch64 Stack Tagging (aarch64-stack-tagging)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "SME ABI Pass (aarch64-sme-abi)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Exception handling preparation (dwarfehprepare)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Prepare callbr (callbrprepare)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
        Pass {
            name: "Safe Stack instrumentation pass (safe-stack)",
            machine: false,
            after: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            before: [
                ResultLine {
                    text: "define float @a()",
                },
                ResultLine {
                    text: "  ret float 0.000000e+00",
                },
                ResultLine {
                    text: "}",
                },
            ],
            ir_changed: false,
        },
    ],
}
